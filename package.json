{
  "name": "eventsitter",
  "version": "0.0.1",
  "description": "An event-sitting app for @TheIronYard final project",
  "license": "MIT",
  "main": "heroku-server.js",
  "browserify": {
    "transform": [
      "babelify",
      "envify"
    ]
  },
  "//": [
    "https://docs.npmjs.com/misc/scripts <-- more about npm scripts"
  ],
  "babel": {
    "loose": "all",
    "stage": 0
  },
  "engines": {
    "node": ">=5.0.0 <6"
  },
  "config": {
    "squash_reset": "HEAD~1",
    "squash_msg": "'squashing commits down to 1 commit'"
  },
  "scripts": {
    "build:css": "postcss --use postcss-import --use postcss-mixins --use postcss-simple-vars --use postcss-calc --use postcss-nested --use postcss-conditionals --use postcss-for --use postcss-each --use postcss-simple-extend --use autoprefixer --use csswring -o ./dist/style.css scss/style.scss;",
    "build:js": "browserify -e ./js/app-browserify.js > ./dist/app-browserify.js",
    "build": "npm-run-all --parallel build:*; echo \"all done!\";",
    "watch:css": "npm run build:css; sane 'npm run build:css' ./scss --glob='**/*.css' --glob='**/*.scss'",
    "watch:js": "watchify ./js/app-browserify.js -p browserify-hmr -v --delay 16 -o 'exorcist ./dist/app-browserify.js.map > ./dist/app-browserify.js' -d --",
    "watch": "[ \"$NODE_ENV\" != production ] && npm-run-all --parallel watch:*; echo 'watching started, if not in production';",
    "test": "ava js/test/main.js",
    "nodemon_task": "nodemon --watch . --ext js,jsx -ignore dist heroku-server.js",
    "nodemon": "npm-run-all --parallel nodemon_task watch",
    "server": "forever heroku-server.js",
    "start": "npm-run-all --parallel server build watch",
    "bower": "bower install normalize-css foundation typeplate-starter-kit pace; echo 'bower dependencies installed';",
    "postinstall": "npm-run-all bower production-setup;",
    "production-setup": "[ \"$NODE_ENV\" == production ] && npm-run-all build; echo 'built for deployment';",
    "docs": "esdoc -c esdoc.json",
    "docs:surge": "npm-run-all docs; surge dist/esdoc;",
    "docs:gh-pages": "git add --all . && git commit -am 'cleaning up any staged and uncomitted changes'; git checkout master; npm-run-all docs; git subtree split --prefix dist -b gh-pages && git checkout gh-pages && cp -rf ./dist/esdoc/* . && git add ast class css file identifiers.html index.html script variable badge.svg coverage.json dump.json function image package.json source.html && git commit -am 'cleaning and pushing' && git push origin gh-pages:gh-pages --force; git checkout master; git branch -Dq gh-pages; echo 'done';",
    "publish:gh-pages": "git add . && git commit -am 'cleaning up any staged and uncomitted changes'; git checkout master; npm-run-all build:* && git subtree split --prefix dist -b gh-pages && git checkout autobuilder && cp dist/app-browserify.js . && cp dist/style.css . && git add app-browserify.js style.css && git commit -am 'cleaning and pushing' && git push origin autobuilder:gh-pages --force; git checkout master; git branch -Dq autobuilder; echo 'done';",
    "publish:surge": "npm-run-all build:*; rm -rf dist/esdoc; surge dist; echo 'done';",
    "teardown": "surge list; echo 'type a domain from above: \n ------------ \n\n '; surge teardown",
    "clean:subtrees": "git reflog expire --all --expire-unreachable=0; git repack -A -d; git prune; git gc;",
    "upgrade:brew": "brew update && brew upgrade",
    "check": "nsp check; echo 'check completed';",
    "dedupe": "npm dedupe",
    "deps": "browserify --list; browserify --deps;",
    "squash": "git reset $npm_package_config_squash_reset; git add .; git commit -am $npm_package_config_squash_msg; git push origin HEAD --force;",
    "squash:reset": "npm run squash --squash_reset:universal-js-boilerplate=--",
    "amend": "git commit --amend -m --",
    "logs:heroku": "heroku logs --tail"
  },
  "dependencies": {
    "autoprefixer": "^6.0.3",
    "babel": "^5.6.7",
    "babel-runtime": "^5.6.5",
    "babelify": "^6.4.0",
    "backbone": "^1.2.1",
    "body-parser": "^1.14.1",
    "bower": "^1.4.1",
    "browserify": "^12.0.1",
    "compression": "^1.5.2",
    "csswring": "^4.0.0",
    "csurf": "^1.8.3",
    "envify": "^3.4.0",
    "express": "^4.12.3",
    "express-session": "^1.11.3",
    "forever": "^0.15.1",
    "isomorphic-fetch": "^2.2.0",
    "jquery": "^2.1.4",
    "lodash": "^3.10.1",
    "method-override": "^2.3.3",
    "mithril-resolver": "^0.0.11",
    "nanny": "^1.0.1",
    "npm-run-all": "^1.2.13",
    "postcss": "^5.0.11",
    "postcss-calc": "^5.0.0",
    "postcss-cli": "^2.3.2",
    "postcss-conditionals": "^2.0.0",
    "postcss-each": "^0.7.0",
    "postcss-for": "^2.0.0",
    "postcss-import": "^7.1.3",
    "postcss-mixins": "^2.1.1",
    "postcss-nested": "^1.0.0",
    "postcss-simple-extend": "^1.0.0",
    "postcss-simple-vars": "^1.1.0",
    "react": "^0.14.0",
    "react-dom": "^0.14.0",
    "react-resolver": "https://github.com/matthiasak/react-resolver.git",
    "request": "^2.55.0",
    "sane": "^1.3.0",
    "universal-utils": "^0.0.43"
  },
  "devDependencies": {
    "ava": "^0.3.0",
    "browserify-hmr": "^0.3.1",
    "esdoc": "^0.4.0",
    "esdoc-es7-plugin": "^0.0.3",
    "exorcist": "^0.4.0",
    "nodemon": "^1.3.7",
    "nsp": "^2.0.0",
    "surge": "^0.17.2",
    "watchify": "^3.4.0"
  }
}
